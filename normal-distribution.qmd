# Normal distribution

```{r}
#| echo: false

source("_common.R")
```

The normal distribution, also known as the Gaussian distribution, is one of the most important probability distributions in statistics. It is characterized by its "bell-shaped" curve, which is symmetric about the mean. The normal distribution is used to model a wide range of real-world phenomena, including heights and weights of adults, blood pressures, reaction times in psychological experiments, and more.

## Prerequisite

Setting up the required R packages in this chapter.

```{r}
#| message: false

library(tidyverse)
library(nortest)
library(scales)
library(e1071)
```

## Normal distribution

The probability density function of a normal distribution is given by the formula:

$$f(x) = \frac{1}{\sigma\sqrt{2\pi}} e^{-\frac{(x - \mu)^2}{2\sigma^2}}$$

where $x$ is the variable, $\mu$ is the mean, and $\sigma$ is the standard deviation. The $\mu$ and $\sigma$ are two parameters of the distribution. The mean $\mu$ is a **location parameter**, which defines the central position, as shown in @fig-normal-mean . The standard deviation $\sigma$ is the **shape parameter**, which defines the width and height of the distribution, as shown in @fig-normal-sd .

```{r}
#| echo: false
#| label: fig-normal-mean
#| fig-cap: The normal curve with different means

tibble(
  x  = seq(-4, 4, length.out = 150),
  y1 = dnorm(x, mean = 0,   sd = 1),
  y2 = dnorm(x, mean = 1,  sd = 1)
) |> 
  pivot_longer(
    cols      = contains("y"),
    values_to = "density",
    names_to  = "group"
  ) |> 
  ggplot(aes(x = x, y = density, linetype = group)) +
  geom_line() +
  scale_linetype_manual(
    name   = "",
    values = c("solid", "dotdash"),
    labels = c("mean = 0", "mean = 1")
  ) +
  theme(
    axis.text   = element_text(size = 12),
    axis.title  = element_text(size = 12),
    legend.text = element_text(size = 12)
  )
```

```{r}
#| echo: false
#| label: fig-normal-sd
#| fig-cap: The normal curve with different standard deviation
 
tibble(
  x  = seq(-4, 4, length.out = 150),
  y1 = dnorm(x, mean = 0, sd = 0.5),
  y2 = dnorm(x, mean = 0, sd = 1),
  y3 = dnorm(x, mean = 0, sd = 1.5)
) |> 
  pivot_longer(
    cols      = contains("y"),
    values_to = "density",
    names_to  = "group"
  ) |> 
  ggplot(aes(x = x, y = density, linetype = group)) +
  geom_line() +
  scale_linetype_manual(
    name   = "",
    values = c("solid", "dotdash", "dashed"),
    labels = c("sd = 0.5", "sd = 1", "sd = 1.5")
  ) +
  theme(
    axis.text   = element_text(size = 12),
    axis.title  = element_text(size = 12),
    legend.text = element_text(size = 12)
  )
```

### Standard normal distribution

As shown above, the change of $\mu$ and $\sigma$ affects the shape of a normal distribution. For convenience, let

$$z = \frac{x - \mu}{\sigma}$$

then the above mentioned probability density function will become as:

$$f(z) = \frac{1}{\sqrt{2\pi}} e^{-\frac{1}{2}z^2}$$ which is called the standard normal distribution, where of $\mu = 0$ and $\sigma = 1$.

### Area under curve

The cumulative distribution function is the probability that a normal random variable $X$ will be less than or equal to a given value $x$, which is defined by the formula:

$$F(x) = \frac{1}{\sigma\sqrt{2\pi}} \int_{-\infty}^x e^{-\frac{(x - \mu)^2}{2\sigma^2}}$$The area under the curve of a normal distribution over a specific interval represents the probability that the random variable falls within that interval. This is computed using the cumulative distribution function.

In R, you can calculate the area under the curve between two points using the `pnorm()` function.

::: example
Calculating the area under the standard normal curve between -1.96 and 1.96.
:::

```{r}
area_under_curve <- pnorm(1.96, mean = 0, sd = 1) - pnorm(-1.96, mean = 0, sd = 1)
area_under_curve
```

### Visualizing the area

You can use `ggplot2` package in R to plot the normal distribution curve and shade the area under the curve. Here is example to shade the area of the left and right tails.

```{r}
#| echo: false

df <- tibble(
  x       = seq(-4, 4, length.out = 600),
  density = dnorm(x, mean = 0,   sd = 1)
) 

df |> 
  ggplot(aes(x = x, y = density)) +
  geom_line() +
  geom_area(
    data = filter(df, x >= 1.96),
    aes(x = x, y = density),
    alpha = 0.5
  ) + 
  geom_area(
    data = filter(df, x <= -1.96),
    aes(x = x, y = density),
    alpha = 0.5
  ) + 
  scale_x_continuous(
    breaks = c(-1.96, 0, 1.96),                    
    labels = expression(mu-1.96*sigma, mu, mu+1.96*sigma)) +
  annotate(
    "text", x = -2.6, y = 0.04, 
    label = percent(pnorm(-1.96), accuracy = 0.1)
  ) +  
  annotate(
    "text", x = 2.6, y = 0.04, 
    label = percent(1 - pnorm(1.96), accuracy = 0.1)
  ) +  
  theme(
    axis.text   = element_text(size = 12),
    axis.title  = element_text(size = 12),
    legend.text = element_text(size = 12)
  )
```

## Normality test

::: example
A scientist used a random sampling method to examine the red blood cell count of 29 normal adult men. The measuring results are saved in the below file. Please analyze its normality.
:::

<a href="datasets/ex04-01.csv" download="ex04-01.csv" class="btn btn-success"> <i class="bi bi-database-fill-down"></i> Download data </a>

You can click on the download button above to download and the save it in your own folder. Here we import the data file into R and assign to a tibble named `rbc`.

```{r}
rbc <- read_csv("datasets/ex04-01.csv")
```

Test of normality is used to determine if a variable is well-modeled by a normal distribution. This is an important assumption for many statistical tests. Histogram (@sec-frequency-histogram) can be used as a visual tool to assess whether a variable follows a normal distribution, but it should be used with caution due to the reasons below:

-   For a small sample data, the histogram might not provide a clear picture of the distribution, making it harder to assess normality. With larger samples, the histogram gives a better indication but may still be misleading.
-   The appearance of the histogram can change significantly depending on the number of bins (or the bin width). Too few bins might obscure important features of the data, while too many bins might introduce noise.
-   The interpretation of a histogram is somewhat subjective. Two people might look at the same histogram and draw different conclusions about normality.

Since histogram can sometimes be misleading or ambiguous, it’s a good practice to use it alongside other methods:

### Hypothesis test method

Statistical tests can provide a more formal assessment of normality, though they also have limitations and can be sensitive to sample size. Here we only show a few commonly used:

-   Shapiro-Wilk test: Best for small to medium-sized data.
-   Shapiro-Francia test: A variation of the Shapiro-Wilk test. It is generally more appropriate for dealing with larger sample size data compared to the Shapiro-Wilk test, particularly for data that is expected to be normally distributed.
-   Anderson-Darling test: Gives more weight to the tails of the distribution.

We perform the Shapiro-Wilk test using `shapiro.test()`, which lies in the `stats` package of base R. The Shapiro-Francia test and Anderson-Darling test are performed by `sf.test()` and `ad.test()`, respectively. Both of them come from the `nortest` package, which need to be installed beforehand.

::: panel-tabset
## Shapiro-Wilk

```{r}
rbc |> 
  pull() |> 
  shapiro.test()
```

## Shapiro-Francia

```{r}
rbc |> 
  pull() |> 
  sf.test()
```

## Anderson-Darling

```{r}
rbc |> 
  pull() |> 
  ad.test()
```
:::

::: callout-note
-   If the p-value is greater than 0.05, the data is normally distributed (fail to reject the null hypothesis).
-   If the p-value is less than 0.05, the data is not normally distributed (reject the null hypothesis).
:::

### Visualization method

Q-Q Plot (Quantile-Quantile Plot) is a more reliable visual tool that plots the quantiles of the data against the quantiles of a theoretical normal distribution. Visual inspection of the data can be very informative and is always useful as a supplementary method.

You can create a Q-Q Plot using `qqnorm()` function. More, you can add a line to a theoretically normal quantile-quantile plot by `qqline()`, which passes through the first and third quartiles by default. These two functions can be found from the `stats` package of base R.

```{r}
rbc |> 
  pull() |> 
  qqnorm(main = "", datax = T)

rbc |> 
  pull() |> 
  qqline(datax = T)
```

Alternatively, you can use the `ggplot2` package to create a Q-Q plot, which has more customization and flexibility. Here is an example.

```{r}
rbc |>
  ggplot(aes(sample = rbc)) +
  geom_qq(shape = 1, size = 2.3) +
  geom_qq_line() +
  labs(x = "Theoretical Quantiles", y = "Sample Quantiles") +
  coord_flip() +
  theme(
    axis.text  = element_text(size = 12),
    axis.title = element_text(size = 12)
  )
```

::: callout-note
-   If the data points fall approximately along the reference line in the Q-Q plot, the data is likely normally distributed.
-   Significant deviations from the line indicate departures from normality.
:::

## Medical reference range

A medical reference range is the set of values that a medical test result falls within for a healthy population. These ranges are used by healthcare providers to interpret laboratory results and determine whether a patient’s test results are normal or indicate a potential health issue.

### Establishment

Reference ranges are typically established by testing a large sample of healthy individuals and determining the range within which a certain percentage (often 95%) of results fall. The middle 95% of the population’s values are considered the reference range, meaning that 2.5% of healthy individuals might naturally have results slightly below this range and another 2.5% slightly above it.

::: example
A investigator randomly sampled 180 normal adult males in a region, and measured the fibrinogen levels (g/L) in their venous blood. The data is saved in a file below. Have a try to establish the 95% medical reference range for fibrinogen level of normal adult males in that region.
:::

<a href="datasets/ex04-02.csv" download="ex04-02.csv" class="btn btn-success"> <i class="bi bi-database-fill-down"></i> Download data </a>

The code chunk below can print the results directly.

```{r}
med_ref_range <- read_csv("datasets/ex04-02.csv") |> 
  pull() |> 
  quantile(probs = c(0.025, 0.975)) |> 
  round(digits = 2) |> 
  print()
```

The result indicates that the 95% medical reference range for the fibrinogen level of normal adult males is: `r paste0("(", med_ref_range[1], ", ", med_ref_range[2], ")")`.

### Result interpretation

A test result that falls within the reference range is usually considered normal. A result outside the reference range might indicate an abnormal condition, but this must be interpreted in the context of the patient’s overall health, symptoms, and medical history. Not all out-of-range results indicate disease; they might be normal for a specific individual due to factors like temporary stress, diet, or exercise.

### Considerations

Reference ranges are not absolute; what is normal for one individual may not be normal for another, especially at the edges of the range. Doctors consider a variety of factors, including patient history and symptoms, when interpreting test results. An out-of-range result may warrant further testing or a different interpretation based on the clinical context.

Reference ranges may be updated as new research and technologies emerge, so staying informed about the latest standards is important for accurate diagnosis and treatment.

# Preface

```{r}
#| echo: false

source("_common.R")
```

The books will feature detailed worked examples and R code fully integrated into the text, ensuring their usefulness to researchers, practitioners and students.

## Prerequisites

We’ve made a few assumptions about what you already know to get the most out of this book. You should have some basic knowledge about medical statistics, and it’s helpful if you have some basic R programming experience already.

You need some things to run the code in this book: R, RStudio and some preinstalled R packages. Packages are the fundamental units of reproducible R code. They include reusable functions, documentation that describes how to use them, and sample data.

### R

To download R, go to CRAN, the **c**omprehensive **R** **a**rchive **n**etwork, [https://cloud.r-project.org](#0). A new major version of R comes out once a year, and there are 2-3 minor releases each year. It’s a good idea to update regularly. Upgrading can be a bit of a hassle, especially for major versions that require you to re-install all your packages, but putting it off only makes it worse. We recommend R 4.4.1 or later for this book.

### RStudio

RStudio is an integrated development environment, or IDE, for R programming, which you can download from [https://posit.co/download/rstudio-desktop/](#0). RStudio is updated a couple of times a year, and it will automatically let you know when a new version is out, so there’s no need to check back. It’s a good idea to upgrade regularly to take advantage of the latest and greatest features. For this book, make sure you have at least RStudio 2024.04.2.

## Running R code

The previous section showed you several examples of running R code. The code in the book looks like this:

```{r}
1 + 2
```

If you run the same code in your local console, it will look like this:

``` yacc
> 1 + 2
[1] 3
```

There are two main differences. In your console, you type after the `>`, called the **prompt**; we don’t show the prompt in the book. In the book, the output is commented out with `#>`; in your console, it appears directly after your code. These two differences mean that if you’re working with an electronic version of the book, you can easily copy code out of the book and paste it into the console.

Throughout the book, we use a consistent set of conventions to refer to code:

-   Functions are displayed in a code font and followed by parentheses, like `sum()` or `mean()`.

-   Other R objects (such as data or function arguments) are in a code font, without parentheses, like `flights` or `x`.

-   Sometimes, to make it clear which package an object comes from, we’ll use the package name followed by two colons, like `dplyr::mutate()` or `nycflights13::flights`. This is also valid R code.

-   To improves readability, variable names and function names are named using snake case.

In this course an introduction to basic statistical methods useful for biomedical data analysis will be given. Concepts are taught in an intuitive manner, alternating between short lectures and practicals. This allows for plenty of interaction and illustration with examples of practical interest. Participants who aim to use more complex methods can use the concepts and skills learned during the course as basis, as the vast majority of statistical methods are implemented in R.

Participants must be able to work with [**R**](http://www.r-project.org/) and R packages to follow the course. Those with little or no experience in R must follow an introductory R course prior to following this course.

In addition, it is strongly advised to learn to work with [**RStudio**](https://www.rstudio.com/products/rstudio/) and [**RMarkdown**](https://rmarkdown.rstudio.com/). Those with no prior knowledge of RMarkdown can follow the tutorials [**here**](https://rmarkdown.rstudio.com/lesson-1.html). During the course we will practice further, and the RMarkdown [**cheatsheets**](https://rmarkdown.rstudio.com/lesson-15.html) may be useful.

**Who should attend**\
Researchers who need to run their own statistical analyses, and want to do it in a transparent and reproducible manner. While most participants tend to be PhD students and postdocs, more senior researchers can also benefit from the course.

R is a free, open-source software for statistical computing and graphics. In this course, you will learn the programming techniques to make the most of this powerful tool for processing, analysing and presenting your data. Please note that basic statistical knowledge is required. You will analyse data by writing functions and scripts to get reproducible and well documented results. You will learn how to create excellent graphics and how to adapt them to your needs. We will use data from clinical background to work throughout the course. Main topics covered during this course will be: Basics of the R language, data accessing, data manipulations, explore and summarise your data using descriptive statistics, graphics in R, data analysis with focus on basic statistics (e.g. hypothesis testing, linear and logistic regression).

## Colophon

The book is written by Quarto, an online version of it is available at [https://qbgaoo.github.io/r4ms/](#0).

[
  {
    "objectID": "quat-data-stat-desc.html",
    "href": "quat-data-stat-desc.html",
    "title": "2  Statistical description of quantitative data",
    "section": "",
    "text": "2.1 Prerequisite\nSetting up the required R packages.\nlibrary(tidyverse)\nHere we can import the data file into R by read_csv() function. The first argument is the most important: the path to the file. You can think about the path as the address of the file.\nmax_hr &lt;- read_csv(\"datasets/ex02-01.csv\")\n#&gt; Rows: 143 Columns: 1\n#&gt; ── Column specification ─────────────────────────────────────────────────────\n#&gt; Delimiter: \",\"\n#&gt; dbl (1): max_hr\n#&gt; \n#&gt; ℹ Use `spec()` to retrieve the full column specification for this data.\n#&gt; ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nThe code above will work if you have the ex02-01.csv file in the datasets folder of your project.\nThe missing values are checked below：\nmax_hr |&gt; \n  anyNA()\n#&gt; [1] FALSE\nThe output FALSE indicates no missing values is present.",
    "crumbs": [
      "Basic statistical methods",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Statistical description of quantitative data</span>"
    ]
  },
  {
    "objectID": "quat-data-stat-desc.html#频数分布",
    "href": "quat-data-stat-desc.html#频数分布",
    "title": "2  计量资料的统计描述",
    "section": "2.2 频数分布",
    "text": "2.2 频数分布\n\n2.2.1 频数分布表\n例 从 adsl 数据集提取女性的基线 BMI (\\(kg/m^2\\)) 数据，结果如下：\n\nadsl &lt;- read_sas(\"data-adam/adsl.sas7bdat\")\ntb_bmi_bl &lt;- adsl |&gt; \n  select(BMIBL, SEX) |&gt; \n  filter(SEX == \"F\") |&gt; \n  select(BMIBL)\n\nnrow(tb_bmi_bl)\n#&gt; [1] 143\n\n共有143例数据，检查是否有缺失值：\n\ntb_bmi_bl |&gt; \n  anyNA()\n#&gt; [1] TRUE\n\n输出结果为TRUE，提示有缺失值。利用下面的代码可以计算缺失值的个数：\n\ntb_bmi_bl |&gt; \n  is.na() |&gt; \n  sum()\n#&gt; [1] 1\n\n输出结果为1， 基线 BMI 中有1个缺失值。数据分析时可根据具体情况做相应处理，例如：\n\n直接删除\n\n\ntb_bmi_bl_clean &lt;- na.omit(tb_bmi_bl)\nnrow(tb_bmi_bl_clean) \n#&gt; [1] 142\n\n\n填补缺失值（简单起见，这里直接用均数）\n\n\ntb_bmi_bl_filled &lt;- tb_bmi_bl |&gt; \n  mutate(\n    BMIBL = ifelse(is.na(BMIBL), mean(BMIBL, na.rm = T), BMIBL)\n  ) |&gt; \n  round(digits = 1)\n\n填补完成后，对143名女性的基线BMI 求 最小值、最大值和极差：\n\nbmi &lt;- tb_bmi_bl_filled\n1range(bmi)\nrange_bmi &lt;- range(bmi) |&gt;                               \n2  diff() |&gt;\n  print()\n#&gt; [1] 15.1 40.1\n#&gt; [1] 25\n\n\n1\n\nrange()返回包含最小值和最大值的向量\n\n2\n\n利用管道操作符和diff()计算极差\n\n\n\n\n也可用下面的方法计算：\n\nmin_bmi &lt;- min(bmi)\nmax_bmi &lt;- max(bmi)\nrange_bmi &lt;- max_bmi - min_bmi\n\n组段数通常取10~15组，这里取12：\n根据组距写出组段的上下限：\n\nbreaks &lt;- seq(from = min_bmi, to = max_bmi, length.out = 12)\nbreaks\n#&gt;  [1] 15.10000 17.37273 19.64545 21.91818 24.19091 26.46364 28.73636 31.00909\n#&gt;  [9] 33.28182 35.55455 37.82727 40.10000\n\n使用cut()函数将数据分到指定的组段，并根据它们落在哪个区间对变量值进行编码；\n\nvalue_bmi &lt;- pull(bmi)\ncut(value_bmi, breaks = breaks, include.lowest = T, right = F) |&gt; \n  str_c() |&gt; \n1  c(rep(\" \", ceiling(nrow(bmi) / 8) * 8 - nrow(bmi))) |&gt;\n  matrix(ncol = 8, byrow = T) |&gt; \n  as.data.frame() |&gt; \n  kbl() |&gt; \n  kable_classic()\n\n\n1\n\n每行输出8个区间，输出元素个数是8的整数倍，不足的用空字符补足。\n\n\n\n\n\n\n\n\nV1\nV2\nV3\nV4\nV5\nV6\nV7\nV8\n\n\n\n\n[24.2,26.5)\n[24.2,26.5)\n[28.7,31)\n[21.9,24.2)\n[26.5,28.7)\n[24.2,26.5)\n[21.9,24.2)\n[26.5,28.7)\n\n\n[26.5,28.7)\n[24.2,26.5)\n[17.4,19.6)\n[21.9,24.2)\n[17.4,19.6)\n[24.2,26.5)\n[31,33.3)\n[21.9,24.2)\n\n\n[24.2,26.5)\n[37.8,40.1]\n[21.9,24.2)\n[31,33.3)\n[19.6,21.9)\n[17.4,19.6)\n[37.8,40.1]\n[21.9,24.2)\n\n\n[24.2,26.5)\n[19.6,21.9)\n[21.9,24.2)\n[17.4,19.6)\n[21.9,24.2)\n[28.7,31)\n[24.2,26.5)\n[19.6,21.9)\n\n\n[19.6,21.9)\n[26.5,28.7)\n[21.9,24.2)\n[15.1,17.4)\n[24.2,26.5)\n[19.6,21.9)\n[24.2,26.5)\n[19.6,21.9)\n\n\n[17.4,19.6)\n[21.9,24.2)\n[21.9,24.2)\n[28.7,31)\n[19.6,21.9)\n[19.6,21.9)\n[26.5,28.7)\n[31,33.3)\n\n\n[28.7,31)\n[26.5,28.7)\n[21.9,24.2)\n[19.6,21.9)\n[19.6,21.9)\n[26.5,28.7)\n[24.2,26.5)\n[19.6,21.9)\n\n\n[19.6,21.9)\n[28.7,31)\n[21.9,24.2)\n[17.4,19.6)\n[26.5,28.7)\n[26.5,28.7)\n[19.6,21.9)\n[21.9,24.2)\n\n\n[15.1,17.4)\n[21.9,24.2)\n[31,33.3)\n[21.9,24.2)\n[19.6,21.9)\n[28.7,31)\n[21.9,24.2)\n[19.6,21.9)\n\n\n[21.9,24.2)\n[21.9,24.2)\n[24.2,26.5)\n[21.9,24.2)\n[24.2,26.5)\n[21.9,24.2)\n[17.4,19.6)\n[31,33.3)\n\n\n[26.5,28.7)\n[21.9,24.2)\n[17.4,19.6)\n[19.6,21.9)\n[26.5,28.7)\n[21.9,24.2)\n[19.6,21.9)\n[19.6,21.9)\n\n\n[17.4,19.6)\n[17.4,19.6)\n[17.4,19.6)\n[21.9,24.2)\n[24.2,26.5)\n[21.9,24.2)\n[19.6,21.9)\n[19.6,21.9)\n\n\n[31,33.3)\n[24.2,26.5)\n[19.6,21.9)\n[19.6,21.9)\n[21.9,24.2)\n[24.2,26.5)\n[15.1,17.4)\n[26.5,28.7)\n\n\n[24.2,26.5)\n[19.6,21.9)\n[17.4,19.6)\n[19.6,21.9)\n[19.6,21.9)\n[17.4,19.6)\n[24.2,26.5)\n[24.2,26.5)\n\n\n[21.9,24.2)\n[24.2,26.5)\n[19.6,21.9)\n[21.9,24.2)\n[19.6,21.9)\n[21.9,24.2)\n[28.7,31)\n[21.9,24.2)\n\n\n[33.3,35.6)\n[31,33.3)\n[31,33.3)\n[24.2,26.5)\n[19.6,21.9)\n[21.9,24.2)\n[24.2,26.5)\n[28.7,31)\n\n\n[21.9,24.2)\n[19.6,21.9)\n[24.2,26.5)\n[24.2,26.5)\n[28.7,31)\n[26.5,28.7)\n[19.6,21.9)\n[17.4,19.6)\n\n\n[19.6,21.9)\n[19.6,21.9)\n[21.9,24.2)\n[19.6,21.9)\n[21.9,24.2)\n[26.5,28.7)\n[19.6,21.9)\n\n\n\n\n\n\n\n\n\n生成频数分布表：\n\nDescTools::Freq(value_bmi, breaks = breaks) |&gt; \n  kbl() |&gt; \n  kable_classic()\n\n\n\n表 2.1: 138名正常成年女性的红细胞数频数分布\n\n\n\n\n\n\n\nlevel\nfreq\nperc\ncumfreq\ncumperc\n\n\n\n\n[15.1,17.4]\n3\n0.0209790\n3\n0.0209790\n\n\n(17.4,19.6]\n14\n0.0979021\n17\n0.1188811\n\n\n(19.6,21.9]\n34\n0.2377622\n51\n0.3566434\n\n\n(21.9,24.2]\n34\n0.2377622\n85\n0.5944056\n\n\n(24.2,26.5]\n24\n0.1678322\n109\n0.7622378\n\n\n(26.5,28.7]\n14\n0.0979021\n123\n0.8601399\n\n\n(28.7,31]\n9\n0.0629371\n132\n0.9230769\n\n\n(31,33.3]\n8\n0.0559441\n140\n0.9790210\n\n\n(33.3,35.6]\n1\n0.0069930\n141\n0.9860140\n\n\n(35.6,37.8]\n0\n0.0000000\n141\n0.9860140\n\n\n(37.8,40.1]\n2\n0.0139860\n143\n1.0000000\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.2.2 频数分布图\n\nhist(\n  x              = value_bmi, \n  breaks         = breaks, \n  right          = T, \n  col            = \"light gray\", \n  include.lowest = T,\n  main           = \" \",\n  xlab           = \"BMI\",\n  ylab           = \"频数\"\n)\n\n\n\n\n\n\n\n图 2.1: 138名正常成年女性的红细胞数频数分布",
    "crumbs": [
      "基本统计方法",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>计量资料的统计描述</span>"
    ]
  },
  {
    "objectID": "quat-data-stat-desc.html#集中趋势的描述",
    "href": "quat-data-stat-desc.html#集中趋势的描述",
    "title": "2  计量资料的统计描述",
    "section": "2.3 集中趋势的描述",
    "text": "2.3 集中趋势的描述\n\n2.3.1 算术均数\n例2-2 计算例2-1某医院138名正常成年女性的红细胞数的均数。\n\nmean(value_bmi) |&gt; \n  round(digits = 2)\n#&gt; [1] 23.99\n\n\n\n2.3.2 几何均数\n例2-3 69例类风湿关节炎（RA）患者血清EBV-VCA-lgG抗体滴度测量值如下，求其平均抗体滴度。\n10 10 10 10 20 20 20 40 40 40 40 40 40 40 40 40 40 80 80 80 80 80 80 80 80 80 80 160 160 160 160 160 160 160 160 160 160 160 320 320 320 320 320 320 320 320 320 320 320 320 320 320 320 640 640 640 640 640 640 640 640 640 640 640 640 640 640 1280 1280\n设serum_antibody_titer为患者血清抗体滴度变量，则几何均数为：\n\nserum_antibody_titer |&gt; \n  DescTools::Gmean() |&gt; \n  round(digits = 1)\n#&gt; [1] 150.6\n\n\n\n2.3.3 中位数与四分位数\n计算例2-1某医院138名正常成年女性的红细胞数的中位数和四分位数：\n\nmedian(value_bmi)\n#&gt; [1] 23.6\nquantile(value_bmi, probs = c(0.25, 0.5, 0.75)) |&gt; \n  round(digits = 2)\n#&gt;   25%   50%   75% \n#&gt; 20.90 23.60 26.05",
    "crumbs": [
      "基本统计方法",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>计量资料的统计描述</span>"
    ]
  },
  {
    "objectID": "quat-data-stat-desc.html#离散趋势的描述",
    "href": "quat-data-stat-desc.html#离散趋势的描述",
    "title": "2  计量资料的统计描述",
    "section": "2.4 离散趋势的描述",
    "text": "2.4 离散趋势的描述\n以例2-1某医院138名正常成年女性的红细胞数为例，计算描述离散趋势的统计指标：\n\n2.4.1 极差\n\nrange(bmi) |&gt; \n  diff()\n#&gt; [1] 25\n\n\n\n2.4.2 四分位数间距\n\nIQR(value_bmi) |&gt; \n  round(digits = 2)\n#&gt; [1] 5.15\n\n\n\n2.4.3 方差和标准差\n\nvar(value_bmi)\n#&gt; [1] 18.72291\nsd(value_bmi)\n#&gt; [1] 4.326998\n\n\n\n2.4.4 变异系数\n\ncv &lt;- (sd(value_bmi) / mean(value_bmi)) * 100\nround(cv, digits = 2)\n#&gt; [1] 18.03",
    "crumbs": [
      "基本统计方法",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>计量资料的统计描述</span>"
    ]
  },
  {
    "objectID": "quat-data-stat-desc.html#医学参考值范围",
    "href": "quat-data-stat-desc.html#医学参考值范围",
    "title": "2  Statistical description of quantitative data",
    "section": "2.5 医学参考值范围",
    "text": "2.5 医学参考值范围\n以例2-1某医院138名正常成年女性的红细胞数为例，确定其医学参考值范围：\n\nmed_ref_range &lt;- quantile(value_bmi, probs = c(0.025, 0.975)) |&gt; \n  round(digits = 3) |&gt; \n  print()\n#&gt;  2.5% 97.5% \n#&gt; 17.81 33.09\n\n由上可知，正常成年女性红细胞数的95%医学参考值范围为: (17.81, 33.09)",
    "crumbs": [
      "Basic statistical methods",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Statistical description of quantitative data</span>"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "1.1 Prerequisites\nWe’ve made a few assumptions about what you already know to get the most out of this book. You should have some basic knowledge about medical statistics, and it’s helpful if you have some basic R programming experience already.\nYou need some things to run the code in this book: R, RStudio and some preinstalled R packages. Packages are the fundamental units of reproducible R code. They include reusable functions, documentation that describes how to use them, and sample data.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "basic-stat.html",
    "href": "basic-stat.html",
    "title": "Basic statistical methods",
    "section": "",
    "text": "基本的医学统计方法涵盖了数据的收集、整理、描述、分析和解释，旨在帮助研究者理解疾病的发生、发展、治疗效果及健康状况的分布规律。以下是医学研究中常用的一些基本统计方法：\n\n1. 描述性统计\n\n频率分析：计算各类别或数值出现的频数和百分比。\n集中趋势测量：平均值、中位数和众数，用于描述数据的中心位置。\n离散程度测量：标准差、方差、四分位数间距和极差，反映数据的分散程度。\n\n\n\n2. 推断性统计\n\n参数检验：\n\nt检验：用于比较两组或几组独立或配对样本的均值差异，如学生t检验、配对t检验。\nANOVA（方差分析）：比较多个样本均值是否存在显著差异。\n\n非参数检验：\n\nMann-Whitney U检验（Wilcoxon秩和检验的两样本形式）：适用于连续数据但不符合正态分布的两组样本均值差异检验。\nKruskal-Wallis H检验：多组独立样本的中位数差异检验，适用于非正态分布数据。\n\n卡方检验（Chi-square test）：用于分析分类变量间的关系，如四格表检验。\n\n\n\n3. 回归分析\n\n线性回归：研究一个或多个自变量与一个连续因变量之间的线性关系。\n逻辑回归（Logistic Regression）：适用于因变量为二分类或多元分类的场合，用来估计事件发生概率。\n\n\n\n5. 随机化和抽样\n\n随机化：确保研究的组间可比性。\n抽样技术：包括简单随机抽样、分层抽样、整群抽样等，确保样本代表性。\n\n\n\n6. 误差与功效分析\n\n类型I和II错误的理解，以及统计功效分析，以确定研究设计是否足够强大以检测预期效应。\n\n选择适当的统计方法需依据研究目的、数据类型（定量或定性）、数据分布（正态与否）、样本大小等因素。理解这些基础统计概念和方法对于设计和解读医学研究至关重要。",
    "crumbs": [
      "Basic statistical methods"
    ]
  },
  {
    "objectID": "ttest.html",
    "href": "ttest.html",
    "title": "5  Population mean estimation and t test",
    "section": "",
    "text": "5.1 Prerequisites\nlibrary(tidyverse)\nlibrary(kableExtra)\n例3-1 若某市1999年18岁男生身高服从均数为167.7cm，标准差为5.3cm的正态分布。从该正态分布N(167.7, 5.32)cm总体中随机抽样100次即共抽取样本g=100个，每次样本含量10人，计算得到每个样本的均数及标准差，数据以Stata格式保存，利用haven::read_csv()函数导入R变量 height_sample 中。是部分数据。\nYou can import this data file into R by read_csv() function. The first argument is the most important: the path to the file. You can think about the path as the address of the file.\nheight_sample &lt;- read_csv(\"datasets/ex03-01.csv\") \n#&gt; Rows: 100 Columns: 3\n#&gt; ── Column specification ─────────────────────────────────────────────────────\n#&gt; Delimiter: \",\"\n#&gt; dbl (3): no, mean, sd\n#&gt; \n#&gt; ℹ Use `spec()` to retrieve the full column specification for this data.\n#&gt; ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhead(height_sample) |&gt; \n  kbl(align = \"c\") |&gt;\n  kable_classic(full_width = F) |&gt; \n  row_spec(0, bold = T)\n\n\n\n\n\nno\nmean\nsd\n\n\n\n\n1\n167.41\n2.74\n\n\n2\n165.56\n6.57\n\n\n3\n168.20\n5.36\n\n\n4\n166.67\n4.81\n\n\n5\n164.89\n5.41\n\n\n6\n166.36\n4.50",
    "crumbs": [
      "Basic statistical methods",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Population mean estimation and *t* test</span>"
    ]
  },
  {
    "objectID": "ttest.html#标准误和可信区间",
    "href": "ttest.html#标准误和可信区间",
    "title": "5  Population mean estimation and t test",
    "section": "5.2 标准误和可信区间",
    "text": "5.2 标准误和可信区间\n\n5.2.1 单一总体均数的可信区间\n例3-2 计算例3-1中每个样本的标准误和可信区间\n\nmean  &lt;- height_sample$mean\nsd    &lt;- height_sample$sd\nlower_bound = vector(mode = \"double\", length = 100)\nupper_bound = vector(mode = \"double\", length = 100)\n\nfor(i in seq(1:100)){\n1  ttest &lt;- DescTools::TTestA(\n  mx = mean[i],\n  sx = sd[i],\n  nx = 10,\n  alternative = \"two.sided\",\n  mu = 167.7\n  )\n  ci &lt;- ttest$conf.int\n  lower_bound[i] &lt;- ci[1]\n  upper_bound[i] &lt;- ci[2]\n}\n\nheight_sample |&gt; \n  mutate(\n    se          = sd / sqrt(10),\n    lower_bound = lower_bound,\n    upper_bound = upper_bound\n  ) |&gt; \n  head()|&gt; \n  kbl(digits = 2, align = \"c\") |&gt;\n  kable_classic(full_width = F) |&gt; \n  row_spec(0, bold = T)\n\n\n1\n\nTTestA()根据用户提供的统计量进行单个或两个样本 t 检验，而不是像t.test()中那样基于数据直接进行检验；此例是单样本，两样本类同，参见下例。\n\n\n\n\n\n\n\n\nno\nmean\nsd\nse\nlower_bound\nupper_bound\n\n\n\n\n1\n167.41\n2.74\n0.87\n165.45\n169.37\n\n\n2\n165.56\n6.57\n2.08\n160.86\n170.26\n\n\n3\n168.20\n5.36\n1.69\n164.37\n172.03\n\n\n4\n166.67\n4.81\n1.52\n163.23\n170.11\n\n\n5\n164.89\n5.41\n1.71\n161.02\n168.76\n\n\n6\n166.36\n4.50\n1.42\n163.14\n169.58\n\n\n\n\n\n\n\n\n\n\n5.2.2 两总体均数差的可信区间\n例3-3 61名患者随机分为两组，已知安慰剂组29例，试验组32例，治疗前安慰剂组IL-2的均数为20.1，标准差为7.02；试验组IL-2的均数为16.89，标准差为8.46。问两组治疗前基线的IL-2相差有多大？\n\nttest &lt;- DescTools::TTestA(\nmx = 20.1,\nmy = 16.89,\nsx = 7.02,\nsy = 8.46,\nnx = 29,\nny = 32,\nalternative = \"two.sided\"\n)\nci &lt;- ttest$conf.int |&gt; \n  round(digits = 2)\n\n因此，两组治疗前基线的IL-2总体均数之差的95%可信区间为(-0.76, 7.18)。",
    "crumbs": [
      "Basic statistical methods",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Population mean estimation and *t* test</span>"
    ]
  },
  {
    "objectID": "ttest.html#t-检验",
    "href": "ttest.html#t-检验",
    "title": "5  Population mean estimation and t test",
    "section": "5.3 t 检验",
    "text": "5.3 t 检验\n计量资料的假设检验中，最常见、最简单的方法是 t 检验。\n\n5.3.1 单样本 t 检验\n例3-4 某医生测量了36名从事铅作业男性工人的血红蛋白含量，算得其均数为130.83g/L，标准差为25.74g/L。问从事铅作业工人的血红蛋白是否不同于正常成年男性平均值140g/L？\n\nread_csv(\"datasets/ex03-05.csv\", show_col_types = F) |&gt; \n  t.test(mu = 140) |&gt; \n1  broom::tidy() |&gt;\n  kbl(digits = 3, align = \"c\") |&gt;\n  kable_classic(full_width = F)\n\n\n1\n\n把一个对象变成一个整齐的tibble，方便表的格式化输出\n\n\n\n\n\n\n\n\nestimate\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n130.833\n-2.137\n0.04\n35\n122.124\n139.543\nOne Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n5.3.2 Paired sample t test\n例3-5 为比较两种方法对乳酸饮料中脂肪含量测定结果是否不同，随机抽取了10份乳酸饮料制品，分别用脂肪酸水解法和哥特里－罗紫法测定其结果。问两法测定结果是否不同？\n\npaired &lt;- read_csv(\"datasets/ex03-06.csv\") \n#&gt; Rows: 10 Columns: 3\n#&gt; ── Column specification ─────────────────────────────────────────────────────\n#&gt; Delimiter: \",\"\n#&gt; dbl (3): no, x1, x2\n#&gt; \n#&gt; ℹ Use `spec()` to retrieve the full column specification for this data.\n#&gt; ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nt.test(\n  x = paired$x1,\n  y = paired$x2,\n  paired = T\n) |&gt; \n  broom::tidy() |&gt; \n  kbl(digits = 3, align = \"c\") |&gt;\n  kable_classic(full_width = F) |&gt; \n  row_spec(0, bold = T)\n\n\n\n\n\nestimate\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n0.272\n7.926\n0\n9\n0.195\n0.35\nPaired t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n5.3.3 Two-sample t-test\nThe two-sample t-test (aka, the independent t-test) can be performed using base R functions without the need for additional packages.\n\n\n\n\n\n\nExample\n\n\n\n为研究国产四类新药阿卡波糖胶囊的降血糖效果，某医院用40名II型糖尿病病人进行同期随机对照试验。研究者将这些病人随机等分到试验组(用阿卡波糖胶囊)和对照组(用拜唐苹胶囊)，分别测得试验开始前和8周时的空腹血糖，算得空腹血糖下降值，能否认为该国产四类新药阿卡波糖胶囊与拜唐苹胶囊对空腹血糖的降糖效果不同？\n\n\n\ntwo_sample &lt;- read_csv(\"datasets/ex03-07.csv\")  \n#&gt; Rows: 20 Columns: 2\n#&gt; ── Column specification ─────────────────────────────────────────────────────\n#&gt; Delimiter: \",\"\n#&gt; dbl (2): x1, x2\n#&gt; \n#&gt; ℹ Use `spec()` to retrieve the full column specification for this data.\n#&gt; ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nt.test(\n  x = two_sample$x1,\n  y = two_sample$x2,\n) |&gt; \n  broom::tidy() |&gt; \n  kbl(digits = 3, align = \"c\") |&gt;\n  kable_classic(full_width = F) |&gt; \n  row_spec(0, bold = T) \n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n-0.56\n2.065\n2.625\n-0.642\n0.525\n36.086\n-2.329\n1.209\nWelch Two Sample t-test\ntwo.sided\n\n\n\n\n\n\n\n\n\n\n5.3.4 Approximate t-test\n进行两小样本均数比较，若两总体方差不等，可采用近似 t 检验:\n例3-7 在上述例3-6国产四类新药阿卡波糖胶囊的降血糖效果研究中，测得用拜唐苹胶囊对照组20例患者和阿卡波糖胶囊试验组20例患者，其8周时糖化血红蛋白HbA1c (%)的下降值见 Table 5.1 。问使用两种不同药物的患者其HbA1c下降值是否相同？\n\n\n\n\nTable 5.1: 阿卡波糖胶囊组和拜唐苹胶囊组HbA1c (%)的下降值\n\n\n\n\n\n\n分组\n\\(n\\)\n\\(\\bar{X}\\)\n\\(S\\)\n\n\n\n\n试验组(阿卡波糖胶囊)\n20\n1.13\n0.70\n\n\n对照组(拜唐苹胶囊)\n20\n1.46\n1.36\n\n\n\n\n\n\n\n\n\nknitr::kable()成功将输出到html的表中的字符渲染为数学符号，其他包函数测试不成功\n\n本例中已知样本均数和方差，标准的t.test()通常用于直接分析数据集而非样本统计量，这里采用DescTools::TTestA()函数。经两样本方差齐性的\\(F\\)检验 (在 Section 5.4 中具体介绍)，两组的总体方差不等，故进行近似 t 检验。\n\nDescTools::TTestA(                              \n  mx = 1.13,\n  my = 1.46,\n  sx = 0.70,\n  sy = 1.36,\n  nx = 20,\n  ny = 20,\n  alternative = \"two.sided\",\n1  var.equal = F\n) |&gt; \n  broom::tidy() |&gt; \n  kbl(digits = 3, align = \"c\") |&gt;\n  kable_classic(full_width = F) |&gt; \n  row_spec(0, bold = T)\n\n\n1\n\nvar.equal，指示两个方差是否相等的逻辑变量。如果为FALSE，则使用Welch (或Satterthwaite) 法进行近似 t 检验\n\n\n\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n-0.33\n1.13\n1.46\n-0.965\n0.343\n28.407\n-1.03\n0.37\nWelch Two Sample t-test\ntwo.sided",
    "crumbs": [
      "Basic statistical methods",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Population mean estimation and *t* test</span>"
    ]
  },
  {
    "objectID": "ttest.html#sec-homogeneity-test",
    "href": "ttest.html#sec-homogeneity-test",
    "title": "5  Population mean estimation and t test",
    "section": "5.4 正态和方差齐性检验",
    "text": "5.4 正态和方差齐性检验\n\n5.4.1 正态性检验\n下面对例3-1中的100个样本均数进行正态性检验：\n（一）计算法\n下面分别采用stats::shapiro.test()和DescTools::ShapiroFranciaTest()进行正态性检验：\n\nx &lt;- height_sample |&gt; \n  select(mean) |&gt; \n1  unlist(use.names = F)\n  \n2stats::shapiro.test(x) |&gt;\n  broom::tidy() |&gt; \n  rbind(\n3    DescTools::ShapiroFranciaTest(x) |&gt;\n      broom::tidy()\n  ) |&gt; \n  kbl(digits = 3, align = \"c\") |&gt;\n  kable_classic(full_width = F) |&gt; \n  row_spec(0, bold = T)\n\n\n1\n\n注意：这里须加unlist(use.names = FALSE)，否则会报错\n\n2\n\nShapiro-Wilk方法\n\n3\n\nShapiro-Francia方法\n\n\n\n\n\n\n\n\nstatistic\np.value\nmethod\n\n\n\n\n0.994\n0.944\nShapiro-Wilk normality test\n\n\n0.993\n0.802\nShapiro-Francia normality test\n\n\n\n\n\n\n\n\nshapiro.test(x)要求x是数值型变量，所以虽然tibble中的mean是数值型，但不能直接传递给使用shapiro.test(x)，需加一个unlist(x, use.names = FALSE)操作，否则会报错，如下面代码块所示：\n\nx &lt;- height_samples |&gt; \n  select(mean) \n#&gt; Error in eval(expr, envir, enclos): object 'height_samples' not found\nstats::shapiro.test(x)\n#&gt; \n#&gt;  Shapiro-Wilk normality test\n#&gt; \n#&gt; data:  x\n#&gt; W = 0.99409, p-value = 0.9444\n\n（二）图示法\n图示法主要使用分位数图 (P-P图)和概率图 (Q-Q图)，其中以Q-Q图效率较高。如果分析的数据服从正态分布，则图上的数据点应分布在直线附近，否则数据点偏离直线较远。\n\nx &lt;- height_sample |&gt; \n  select(mean) |&gt; \n  unlist(use.names = F)\n\n\nstats::qqnorm(\n  x,\n  main = \"Q-Q图\",\n  xlab = \"理论分位数\",\n  ylab = \"样本分位数\",\n  datax = T\n) \nstats::qqline(\n  x,\n  datax = T\n)\n\n\n\n\n\n\n\n\n\n\n5.4.2 方差齐性检验\n对例3-6的数据，利用\\(F\\)检验判断两总体空腹血糖下降值的方差是否相等。这里利用DescTools::LeveneTest()进行方差齐性检验\n\ntb &lt;- two_sample |&gt; \n1  pivot_longer(\n    cols = everything(),\n    names_to = \"group\"\n  ) |&gt; \n  mutate(\n2    group = as.factor(group)\n  )\nDescTools::LeveneTest(tb$value, group = tb$group) |&gt; \n  broom::tidy() |&gt; \n  kbl(digits = 3, align = \"c\") |&gt;\n  kable_classic(full_width = F) |&gt; \n  row_spec(0, bold = T)\n\n\n1\n\n将原数据框进行拉长转换，以符合DescTools::LeveneTest()参数的要求\n\n2\n\n作为数据分组变量，需转换为因子类型，否则会输出警告\n\n\n\n\n\n\n\n\nstatistic\np.value\ndf\ndf.residual\n\n\n\n\n0.493\n0.487\n1\n38",
    "crumbs": [
      "Basic statistical methods",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Population mean estimation and *t* test</span>"
    ]
  },
  {
    "objectID": "quarto.html",
    "href": "quarto.html",
    "title": "4  Quarto",
    "section": "",
    "text": "4.1 GitHub Action\n呈现和发布内容有几种不同的方法。下面，我们将提供一个使用 GitHub Actions 和 GitHub Pages 发布内容的指南。",
    "crumbs": [
      "统计分析报告",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Quarto</span>"
    ]
  },
  {
    "objectID": "quarto.html#github-action",
    "href": "quarto.html#github-action",
    "title": "4  Quarto",
    "section": "",
    "text": "4.1.1 执行代码\n如果你愿意，可以配置一个 GitHub Action 来执行 R 代码作为渲染的一部分。这虽然是最好的方法，但当在 GitHub Actions 等 CI 服务中执行代码时，请考虑以下要求:\n\n你需要在 CI 环境中重新配置所有依赖项（包括 R 以及所需的正确版本的包）。\n如果你的代码需要任何特殊权限（例如访问数据库或网络）， CI 服务器上也需要具备这些权限。\n你的项目可能包含无法轻易执行的文档（例如使用旧版包的几年前的博客文章）。这些文档可能需要单独启用冻结功能，以防止它们在 CI 上执行。\n\n\n\n4.1.2 先决条件\n确保代码可以在 GitHub Action 中执行的最佳方法是为项目使用 renv 虚拟环境。以下是一个完整的 GitHub Action 示例，它安装 R 和 renv.lock 中的包依赖项，然后执行代码并将输出渲染到 GitHub Pages：\n\n\n\n\n\n\n提示\n\n\n\n在 RStudio 左下窗口的 Terminal 选项卡中依次运行以下 Git 命令：\n\ngit remote add origin https://github.com/qbgaoo/r4ms.git\ngit branch -M main\ngit push -u origin main\n\n\n\n在 Quarto 项目中新建文本文件，命名为 publish.yml（当然也可以是其他命字），保存路径为 .github/workflows/publish.yml，在文件中添加如下内容：\non:\n  push:\n    branches: main\n  pull_request:\n    branches: main\n  # to be able to trigger a manual build\n  workflow_dispatch:\n  schedule:\n    # run every day at 11 PM\n    - cron: '0 23 * * *'\n\nname: Render and deploy Book to Github\n\njobs:\n  build-deploy:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n    steps:\n      - name: Check out repository\n        uses: actions/checkout@v4\n\n      - name: Set up Quarto\n        uses: quarto-dev/quarto-actions/setup@v2\n\n      - name: Install R\n        uses: r-lib/actions/setup-r@v2\n        with:\n          r-version: '4.4.1'\n\n      - name: Install R Dependencies\n        uses: r-lib/actions/setup-renv@v2\n        with:\n          cache-version: 1\n\n      - name: Render and Publish\n        uses: quarto-dev/quarto-actions/publish@v2\n        with:\n          target: gh-pages\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n这是一个 GitHub Actions 工作流配置文件，保存后将文件提交到 GitHub中，触发文件中的工作流。",
    "crumbs": [
      "统计分析报告",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Quarto</span>"
    ]
  },
  {
    "objectID": "pilot-project.html",
    "href": "pilot-project.html",
    "title": "13  A case to analyze",
    "section": "",
    "text": "13.1 Datasets\nIn this book, we used publicly available CDISC pilot study data, which is accessible through the CDISC GitHub repository. To streamline the process, we have downloaded all the datasets from the repository and converted them from .xpt format to .sas7bdat format for ease of use and compatibility. Then we stored them in the data/adam/ folder within this project. Additionally, The dataset structure adheres to the CDISC Analysis Data Model (ADaM) standard.\nThe SDTM-ADaM Pilot Project datasets were created to demonstrate the process of converting clinical trial data into formats that comply with the Study Data Tabulation Model (SDTM) and Analysis Data Model (ADaM) standards, which are set by the Clinical Data Interchange Standards Consortium (CDISC). These datasets are used to test, validate, and illustrate how to implement CDISC standards in real-world scenarios, helping pharmaceutical companies and regulatory agencies like the FDA ensure data quality and consistency in clinical trials.\nlibrary(haven)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\nadsl &lt;- read_sas(\"data-adam/adsl.sas7bdat\")\n\nadsl |&gt; \n  select(ARM, ITTFL, EFFFL) |&gt; \n  filter(EFFFL == \"Y\") |&gt; \n  group_by(ARM) |&gt; \n  summarise(n = n())\n\n# A tibble: 3 × 2\n  ARM                      n\n  &lt;chr&gt;                &lt;int&gt;\n1 Placebo                 79\n2 Xanomeline High Dose    74\n3 Xanomeline Low Dose     81\nadsl |&gt; \n  glimpse()\n\nRows: 254\nColumns: 48\n$ STUDYID  &lt;chr&gt; \"CDISCPILOT01\", \"CDISCPILOT01\", \"CDISCPILOT01\", \"CDISCPILOT01…\n$ USUBJID  &lt;chr&gt; \"01-701-1015\", \"01-701-1023\", \"01-701-1028\", \"01-701-1033\", \"…\n$ SUBJID   &lt;chr&gt; \"1015\", \"1023\", \"1028\", \"1033\", \"1034\", \"1047\", \"1097\", \"1111…\n$ SITEID   &lt;chr&gt; \"701\", \"701\", \"701\", \"701\", \"701\", \"701\", \"701\", \"701\", \"701\"…\n$ SITEGR1  &lt;chr&gt; \"701\", \"701\", \"701\", \"701\", \"701\", \"701\", \"701\", \"701\", \"701\"…\n$ ARM      &lt;chr&gt; \"Placebo\", \"Placebo\", \"Xanomeline High Dose\", \"Xanomeline Low…\n$ TRT01P   &lt;chr&gt; \"Placebo\", \"Placebo\", \"Xanomeline High Dose\", \"Xanomeline Low…\n$ TRT01PN  &lt;dbl&gt; 0, 0, 81, 54, 81, 0, 54, 54, 54, 0, 0, 81, 81, 81, 0, 81, 81,…\n$ TRT01A   &lt;chr&gt; \"Placebo\", \"Placebo\", \"Xanomeline High Dose\", \"Xanomeline Low…\n$ TRT01AN  &lt;dbl&gt; 0, 0, 81, 54, 81, 0, 54, 54, 54, 0, 0, 81, 81, 81, 0, 81, 81,…\n$ TRTSDT   &lt;date&gt; 2014-01-02, 2012-08-05, 2013-07-19, 2014-03-18, 2014-07-01, …\n$ TRTEDT   &lt;date&gt; 2014-07-02, 2012-09-01, 2014-01-14, 2014-03-31, 2014-12-30, …\n$ TRTDUR   &lt;dbl&gt; 182, 28, 180, 14, 183, 26, 190, 10, 55, 182, 183, 183, 38, 18…\n$ AVGDD    &lt;dbl&gt; 0.0, 0.0, 77.7, 54.0, 76.9, 0.0, 54.0, 54.0, 54.0, 0.0, 0.0, …\n$ CUMDOSE  &lt;dbl&gt; 0, 0, 13986, 756, 14067, 0, 10260, 540, 2970, 0, 0, 14121, 26…\n$ AGE      &lt;dbl&gt; 63, 64, 71, 74, 77, 85, 68, 81, 84, 52, 84, 81, 75, 57, 79, 5…\n$ AGEGR1   &lt;chr&gt; \"&lt;65\", \"&lt;65\", \"65-80\", \"65-80\", \"65-80\", \"&gt;80\", \"65-80\", \"&gt;80…\n$ AGEGR1N  &lt;dbl&gt; 1, 1, 2, 2, 2, 3, 2, 3, 3, 1, 3, 3, 2, 1, 2, 1, 2, 2, 2, 3, 2…\n$ AGEU     &lt;chr&gt; \"YEARS\", \"YEARS\", \"YEARS\", \"YEARS\", \"YEARS\", \"YEARS\", \"YEARS\"…\n$ RACE     &lt;chr&gt; \"WHITE\", \"WHITE\", \"WHITE\", \"WHITE\", \"WHITE\", \"WHITE\", \"WHITE\"…\n$ RACEN    &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1…\n$ SEX      &lt;chr&gt; \"F\", \"M\", \"M\", \"M\", \"F\", \"F\", \"M\", \"F\", \"M\", \"M\", \"M\", \"F\", \"…\n$ ETHNIC   &lt;chr&gt; \"HISPANIC OR LATINO\", \"HISPANIC OR LATINO\", \"NOT HISPANIC OR …\n$ SAFFL    &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"…\n$ ITTFL    &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"…\n$ EFFFL    &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"…\n$ COMP8FL  &lt;chr&gt; \"Y\", \"N\", \"Y\", \"N\", \"Y\", \"N\", \"Y\", \"N\", \"Y\", \"Y\", \"Y\", \"Y\", \"…\n$ COMP16FL &lt;chr&gt; \"Y\", \"N\", \"Y\", \"N\", \"Y\", \"N\", \"Y\", \"N\", \"N\", \"Y\", \"Y\", \"Y\", \"…\n$ COMP24FL &lt;chr&gt; \"Y\", \"N\", \"Y\", \"N\", \"Y\", \"N\", \"Y\", \"N\", \"N\", \"Y\", \"Y\", \"Y\", \"…\n$ DISCONFL &lt;chr&gt; \"\", \"Y\", \"\", \"Y\", \"\", \"Y\", \"\", \"Y\", \"Y\", \"\", \"\", \"\", \"Y\", \"\",…\n$ DSRAEFL  &lt;chr&gt; \"\", \"Y\", \"\", \"\", \"\", \"Y\", \"\", \"Y\", \"Y\", \"\", \"\", \"\", \"Y\", \"\", …\n$ DTHFL    &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"…\n$ BMIBL    &lt;dbl&gt; 25.1, 30.4, 31.4, 28.8, 26.1, 30.4, 27.3, 23.9, 23.9, 21.9, 2…\n$ BMIBLGR1 &lt;chr&gt; \"25-&lt;30\", \"&gt;=30\", \"&gt;=30\", \"25-&lt;30\", \"25-&lt;30\", \"&gt;=30\", \"25-&lt;30…\n$ HEIGHTBL &lt;dbl&gt; 147.3, 162.6, 177.8, 175.3, 154.9, 148.6, 168.9, 158.2, 181.6…\n$ WEIGHTBL &lt;dbl&gt; 54.4, 80.3, 99.3, 88.5, 62.6, 67.1, 78.0, 59.9, 78.9, 71.2, 7…\n$ EDUCLVL  &lt;dbl&gt; 16, 14, 16, 12, 9, 8, 18, 22, 12, 14, 12, 10, 16, 15, 6, 16, …\n$ DISONSDT &lt;date&gt; 2010-04-30, 2006-03-11, 2009-12-16, 2009-08-02, 2011-09-29, …\n$ DURDIS   &lt;dbl&gt; 43.9, 76.4, 42.8, 55.3, 32.9, 42.0, 99.1, 40.7, 101.9, 44.2, …\n$ DURDSGR1 &lt;chr&gt; \"&gt;=12\", \"&gt;=12\", \"&gt;=12\", \"&gt;=12\", \"&gt;=12\", \"&gt;=12\", \"&gt;=12\", \"&gt;=12…\n$ VISIT1DT &lt;date&gt; 2013-12-26, 2012-07-22, 2013-07-11, 2014-03-10, 2014-06-24, …\n$ RFSTDTC  &lt;chr&gt; \"2014-01-02\", \"2012-08-05\", \"2013-07-19\", \"2014-03-18\", \"2014…\n$ RFENDTC  &lt;chr&gt; \"2014-07-02\", \"2012-09-02\", \"2014-01-14\", \"2014-04-14\", \"2014…\n$ VISNUMEN &lt;dbl&gt; 12, 5, 12, 5, 12, 6, 12, 4, 8, 12, 12, 12, 7, 12, 12, 7, 4, 7…\n$ RFENDT   &lt;date&gt; 2014-07-02, 2012-09-02, 2014-01-14, 2014-04-14, 2014-12-30, …\n$ DCDECOD  &lt;chr&gt; \"COMPLETED\", \"ADVERSE EVENT\", \"COMPLETED\", \"STUDY TERMINATED …\n$ DCREASCD &lt;chr&gt; \"Completed\", \"Adverse Event\", \"Completed\", \"Sponsor Decision\"…\n$ MMSETOT  &lt;dbl&gt; 23, 23, 23, 23, 21, 23, 10, 23, 20, 20, 19, 21, 22, 21, 10, 1…\nglimpse() makes it possible to see every column in a data frame. It’s a little like str() applied to a data frame but it tries to show you as much data as possible.\nOnce you read data in, the first step usually involves transforming it in some way to make it easier to work with in the rest of your analysis. Firstly, we use janitor::clean_names() to turn all column names of data frame adsl into snake case.",
    "crumbs": [
      "Statistical analysis report",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>A case to analyze</span>"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R for Medical Statistics",
    "section": "",
    "text": "Preface\nThis book is created by Quarto and R in RStudio IDE。Quarto is an open-source publishing system that integrates well with R, enabling users to create dynamic documents that combine text, code, and output (like tables and plots) in a single document. It supports R Markdown, allowing the execution of R code within documents and rendering outputs in various formats, such as HTML, PDF, and Word. Quarto is ideal for creating reproducible reports, presentations, and books, especially in academic and research settings where R is extensively used. You can also manage bibliographies, citations, and cross-references easily. Quarto is highly customizable, allowing users to create complex documents with ease, and is often used with GitHub Actions for continuous integration and automated publishing.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "quat-data-stat-desc.html#frequency-distribution",
    "href": "quat-data-stat-desc.html#frequency-distribution",
    "title": "2  Statistical description of quantitative data",
    "section": "2.3 Frequency distribution",
    "text": "2.3 Frequency distribution\n\n2.3.1 Frequency table\nA frequency table mentioned here is a statistical tool that organizes data into intervals and lists the number of frequency in each interval. It helps summarize large dataset by showing how often each value or range of values occurs, making it easier to identify trends and the overall distribution of the data. This table is often used in conjunction with visual tools like histogram to enhance data interpretation.\nHere is the steps for creating a frequency table for continuous variables.\n\nComputing the minimum and maximum of the variable.\n\n\nmin_max_hr &lt;- max_hr |&gt; \n  min()\n\nmax_max_hr &lt;- max_hr |&gt; \n  max()\n\n\nDetermining the number of intervals. The number of intervals is typically between 10 and 15; here, we adopt 12. The seq() function is used to obtain upper and lower limits of the intervals.\n\n\nbreaks &lt;- seq(min_max_hr, max_max_hr, length.out = 13)\nbreaks\n#&gt;  [1]  60.00  71.25  82.50  93.75 105.00 116.25 127.50 138.75 150.00 161.25\n#&gt; [11] 172.50 183.75 195.00\n\n\nUsing the cut() function to dive each data into their respective intervals.\n\n\ncut(pull(max_hr), breaks = breaks, include.lowest = T, right = F) |&gt; \n  head(40)\n#&gt;  [1] [150,161)   [105,116)   [128,139)   [93.8,105)  [139,150)   [161,172)  \n#&gt;  [7] [116,128)   [150,161)   [150,161)   [128,139)   [116,128)   [128,139)  \n#&gt; [13] [82.5,93.8) [93.8,105)  [116,128)   [161,172)   [116,128)   [93.8,105) \n#&gt; [19] [150,161)   [139,150)   [93.8,105)  [116,128)   [71.2,82.5) [139,150)  \n#&gt; [25] [150,161)   [128,139)   [128,139)   [161,172)   [105,116)   [116,128)  \n#&gt; [31] [93.8,105)  [105,116)   [150,161)   [82.5,93.8) [139,150)   [105,116)  \n#&gt; [37] [128,139)   [150,161)   [116,128)   [82.5,93.8)\n#&gt; 12 Levels: [60,71.2) [71.2,82.5) [82.5,93.8) [93.8,105) ... [184,195]\n\n\n8 intervals per line, with the total number of elements being a multiple of 8. Use empty characters to pad if necessary.\n\n\n\nGenerating the frequency table.\n\n\ncut(pull(max_hr), breaks = breaks, include.lowest = T, right = F) |&gt;\n  table() |&gt; \n  knitr::kable(col.names = c(\"interval\", \"freq\"), align = \"c\")\n\n\n\n\ninterval\nfreq\n\n\n\n\n[60,71.2)\n5\n\n\n[71.2,82.5)\n9\n\n\n[82.5,93.8)\n20\n\n\n[93.8,105)\n43\n\n\n[105,116)\n81\n\n\n[116,128)\n108\n\n\n[128,139)\n68\n\n\n[139,150)\n71\n\n\n[150,161)\n63\n\n\n[161,172)\n25\n\n\n[172,184)\n14\n\n\n[184,195]\n1\n\n\n\n\n\n\n\n2.3.2 Frequency histogram\nA frequency histogram is a graphical representation of a frequency table. It displays the distribution of numerical variales by showing the frequency (count) of a value within specific intervals (bins) on the x-axis, with the y-axis representing the frequency. Each bar in the histogram corresponds to an interval, and the height of the bar indicates how many valuess fall within that range. This visual tool is useful for quickly assessing the shape, spread, and central tendency of the data distribution.\n\nhist(\n  x              = pull(max_hr), \n  breaks         = breaks, \n  freq           = T,\n  right          = F, \n  col            = \"skyblue\", \n  include.lowest = T,\n  main           = \" \",\n  xlab           = \"Maximum heart rate\",\n  ylab           = \"Frequency\",\n  ylim           = c(0, 120),\n  labels         = T\n)\n\n\n\n\n\n\n\n\nAn alternative approach to plot the same histogram is also supplied below.\n\nggplot(max_hr, aes(x = max_hr)) +\n  geom_histogram(\n    fill = \"skyblue\", \n    stat = \"bin\",\n    color = \"black\",\n    breaks = breaks,\n    closed = \"left\"\n  ) +\n  stat_bin(\n    geom = \"text\", \n    aes(label = after_stat(count)),\n    breaks = breaks, \n    closed = \"left\",\n    size = 4,\n    vjust = - 0.3\n  ) +\n  labs(x = \"Maximum heart rate\", y = \"Frequency\") +\n  theme(\n    axis.title.x = element_text(size = 12), \n    axis.title.y = element_text(size = 12), \n    axis.text.x = element_text(size = 11),  \n    axis.text.y = element_text(size = 11),\n    panel.background = element_blank(),        \n    axis.line = element_line(color = \"black\") \n  )",
    "crumbs": [
      "Basic statistical methods",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Statistical description of quantitative data</span>"
    ]
  },
  {
    "objectID": "quat-data-stat-desc.html#measures-of-central-tendency",
    "href": "quat-data-stat-desc.html#measures-of-central-tendency",
    "title": "2  Statistical description of quantitative data",
    "section": "2.3 Measures of central tendency",
    "text": "2.3 Measures of central tendency\nCentral tendency is a statistical concept that refers to the measure of the center or typical value in a data set. It provides a summary of the data with a single value that represents the middle or average of the data. The most common measures of central tendency are:\n\n2.3.1 Mean\nThe arithmetic average of all values. It’s calculated by summing all the values and dividing by the number of values.\nFor a population:\n\\[\n\\mu = \\frac{\\sum X_i}{N}\n\\]\nFor a sample:\n\\[\n\\bar{X} = \\frac{\\sum X_i}{n}\n\\]\nwhere \\(X_i\\) represents each value, and \\(N\\) and \\(n\\) are the sizes of the population and sample, respectively.\n\nmax_hr |&gt; \n  pull() |&gt; \n  mean()\n#&gt; [1] 149.049\n\n\n\n2.3.2 Median\nThe middle value in a data set when the values are sorted in ascending order. If there is an even number of values, the median is the average of the two middle values. To find the median:\n\nSort the data set.\nIf the number of observations N is odd, the median is the middle value.\nIf N is even, the median is the average of the two central values.\n\n\nmax_hr |&gt; \n  pull() |&gt; \n  median()\n#&gt; [1] 152",
    "crumbs": [
      "Basic statistical methods",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Statistical description of quantitative data</span>"
    ]
  },
  {
    "objectID": "quat-data-stat-desc.html#measures-of-dispersion-tendency",
    "href": "quat-data-stat-desc.html#measures-of-dispersion-tendency",
    "title": "2  Statistical description of quantitative data",
    "section": "2.4 Measures of dispersion tendency",
    "text": "2.4 Measures of dispersion tendency\n以例2-1某医院138名正常成年女性的红细胞数为例，计算描述离散趋势的统计指标：\n\n2.4.1 极差\n\nrange(bmi) |&gt; \n  diff()\n#&gt; [1] 25\n\n\n\n2.4.2 四分位数间距\n\nIQR(value_bmi) |&gt; \n  round(digits = 2)\n#&gt; [1] 5.15\n\n\n\n2.4.3 方差和标准差\n\nvar(value_bmi)\n#&gt; [1] 18.72291\nsd(value_bmi)\n#&gt; [1] 4.326998\n\n\n\n2.4.4 变异系数\n\ncv &lt;- (sd(value_bmi) / mean(value_bmi)) * 100\nround(cv, digits = 2)\n#&gt; [1] 18.03",
    "crumbs": [
      "Basic statistical methods",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Statistical description of quantitative data</span>"
    ]
  },
  {
    "objectID": "cox-regression.html",
    "href": "cox-regression.html",
    "title": "11  Cox regression",
    "section": "",
    "text": "Cox regression, also known as Cox proportional hazards regression, is a statistical method used to analyze the time until an event occurs, typically survival time. It is widely used in medical research to explore the relationship between the survival time of patients and one or more predictor variables. Unlike other models, Cox regression does not require assumptions about the baseline hazard function, making it a flexible tool for handling censored data where the exact time of the event may not be known for all subjects.",
    "crumbs": [
      "B**asic statistical methods**",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Cox regression</span>"
    ]
  },
  {
    "objectID": "quat-data-stat-desc.html#medical-reference-range",
    "href": "quat-data-stat-desc.html#medical-reference-range",
    "title": "2  Statistical description of quantitative data",
    "section": "2.5 Medical reference range",
    "text": "2.5 Medical reference range\nA medical reference range is a set of values that is used by healthcare providers to interpret laboratory test results. These ranges are typically established by testing a large group of healthy individuals and determining the normal distribution of values within that population. The reference range provides a context for understanding whether a individual’s test results fall within a normal, expected range or if they indicate a potential health issue.\n\nmed_ref_range &lt;- max_hr |&gt; \n  pull() |&gt; \n  quantile(probs = c(0.025, 0.975)) |&gt; \n  round(digits = 0) |&gt; \n  print()\n#&gt;  2.5% 97.5% \n#&gt;   105   183\n\nThe result indicates that the 95% medical reference range for the maximum heart rate in normal individuals is: (105, 183)",
    "crumbs": [
      "Basic statistical methods",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Statistical description of quantitative data</span>"
    ]
  },
  {
    "objectID": "quat-data-stat-desc.html#importing-the-data",
    "href": "quat-data-stat-desc.html#importing-the-data",
    "title": "2  Statistical description of quantitative data",
    "section": "2.2 Importing the data",
    "text": "2.2 Importing the data\nHFPD (Heart Failure Prediction Dataset)\n例 从 adsl 数据集中筛选女性患者maximum heart rate (\\(kg/m^2\\)) 数据，结果如下：\nWe can read this file into R using read_csv(). The first argument is the most important: the path to the file. You can think about the path as the address of the file: the file is called heart.csv and that it lives in the datasets folder.\n\ndf &lt;- read_csv(\"datasets/heart.csv\")\n#&gt; Rows: 918 Columns: 12\n#&gt; ── Column specification ─────────────────────────────────────────────────────\n#&gt; Delimiter: \",\"\n#&gt; chr (5): Sex, ChestPainType, RestingECG, ExerciseAngina, ST_Slope\n#&gt; dbl (7): Age, RestingBP, Cholesterol, FastingBS, MaxHR, Oldpeak, HeartDis...\n#&gt; \n#&gt; ℹ Use `spec()` to retrieve the full column specification for this data.\n#&gt; ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nThe code above will work if you have the heart.csv file in a datasets folder in your project.\n\nmax_hr &lt;- df |&gt;\n  janitor::clean_names() |&gt; \n  select(max_hr, heart_disease) |&gt; \n  filter(heart_disease == 1) |&gt; \n  select(max_hr)\n\nnrow(max_hr)\n#&gt; [1] 508\n\n共有508例数据，检查是否有缺失值：\n\nmax_hr |&gt; \n  anyNA()\n#&gt; [1] FALSE",
    "crumbs": [
      "Basic statistical methods",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Statistical description of quantitative data</span>"
    ]
  },
  {
    "objectID": "quat-data-stat-desc.html#measures-of-dispersion",
    "href": "quat-data-stat-desc.html#measures-of-dispersion",
    "title": "2  Statistical description of quantitative data",
    "section": "2.4 Measures of dispersion",
    "text": "2.4 Measures of dispersion\nDispersion or variability, describe the spread or dispersion of data points in a data set. They provide insight into how much individual data points differ from the central value (mean, median, etc.). Common measures of dispersion include:\n\n2.4.1 Range\nThe difference between the maximum and minimum values in the data set.\n\\[\n\\text{range} = \\text{max} - \\text{min}\n\\]\n\nrange(max_hr) |&gt; \n  diff()\n#&gt; [1] 102\n\n\n\n2.4.2 Interquartile Range (IQR)\nThe range of the middle 50% of the data, calculated as the difference between the 75th percentile (Q3) and the 25th percentile (Q1).\n\\[\n\\text{IQR} = Q3 - Q1\n\\]\nYou can directly use the IQR() function to get IQR.\n\nmax_hr |&gt; \n  pull() |&gt; \n  IQR()\n#&gt; [1] 32.5\n\n\n\n2.4.3 Variance\nMeasures the average squared deviation of each data point from the mean.\nFor a population:\n\\[\n\\sigma^2 = \\frac{1}{N} \\sum_{i=1}^N (X_i - \\mu)^2\n\\]\nFor a sample:\n\\[\nS^2 = \\frac{1}{n-1} \\sum_{i=1}^n (X_i - \\bar{X})^2\n\\]\nwhere \\(\\mu\\) is the population mean, \\(\\bar{X}\\) is the sample mean, \\(X_i\\) represents each value, and \\(N\\) and \\(n\\) are are the sizes of the population and sample, respectively.\nYou can directly use the var() function to get variance.\n\nmax_hr |&gt; \n  pull() |&gt; \n  var()\n#&gt; [1] 466.4694\n\n\n\n2.4.4 Standard deviation\nThe square root of the variance, providing a measure of spread in the same units as the data.\nFor a population:\n\\[\n\\sigma = \\sqrt{\\frac{1}{N} \\sum_{i=1}^N (X_i - \\mu)^2}\n\\]\nFor a sample:\n\\[\nS = \\sqrt{\\frac{1}{n-1} \\sum_{i=1}^n (X_i - \\bar{X})^2}\n\\]\nYou can directly use the sd() function to get standard deviation.\n\nmax_hr |&gt; \n  pull() |&gt; \n  sd()\n#&gt; [1] 21.5979\n\n\n\n2.4.5 Coefficient of Variation (CV)\nThe ratio of the standard deviation to the mean, expressed as a percentage, useful for comparing variability between variables with different units or scales.\nFor a population:\n\\[\n\\text{CV} = \\frac{\\sigma}{\\mu} \\times 100%\n\\]\nwhere \\(\\sigma\\) is the standard deviation and \\(\\mu\\) is the mean of a population.\nFor a sample:\n\\[\n\\text{CV} = \\frac{S}{\\bar{X}} \\times 100%\n\\]\nwhere \\(S\\) is the standard deviation and \\(\\bar{X}\\) is the mean of a sample.\n\nmean &lt;- max_hr |&gt; \n  pull() |&gt; \n  mean()\n\nsd &lt;- max_hr |&gt; \n  pull() |&gt; \n  sd()\n\nsd / mean * 100\n#&gt; [1] 14.49048",
    "crumbs": [
      "Basic statistical methods",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Statistical description of quantitative data</span>"
    ]
  },
  {
    "objectID": "intro.html#prerequisites",
    "href": "intro.html#prerequisites",
    "title": "1  Introduction",
    "section": "",
    "text": "1.1.1 R\nTo download R, go to CRAN, the comprehensive R archive network, https://cloud.r-project.org. A new major version of R comes out once a year, and there are 2-3 minor releases each year. It’s a good idea to update regularly. Upgrading can be a bit of a hassle, especially for major versions that require you to re-install all your packages, but putting it off only makes it worse. We recommend R 4.4.1 or later for this book.\n\n\n1.1.2 RStudio\nRStudio is an integrated development environment, or IDE, for R programming, which you can download from https://posit.co/download/rstudio-desktop/. RStudio is updated a couple of times a year, and it will automatically let you know when a new version is out, so there’s no need to check back. It’s a good idea to upgrade regularly to take advantage of the latest and greatest features. For this book, make sure you have at least RStudio 2024.04.2.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "intro.html#running-r-code",
    "href": "intro.html#running-r-code",
    "title": "1  Introduction",
    "section": "1.2 Running R code",
    "text": "1.2 Running R code\nThe previous section showed you several examples of running R code. The code in the book looks like this:\n\n1 + 2\n#&gt; [1] 3\n\nIf you run the same code in your local console, it will look like this:\n&gt; 1 + 2\n[1] 3\nThere are two main differences. In your console, you type after the &gt;, called the prompt; we don’t show the prompt in the book. In the book, the output is commented out with #&gt;; in your console, it appears directly after your code. These two differences mean that if you’re working with an electronic version of the book, you can easily copy code out of the book and paste it into the console.\nThroughout the book, we use a consistent set of conventions to refer to code:\n\nFunctions are displayed in a code font and followed by parentheses, like sum() or mean().\nOther R objects (such as data or function arguments) are in a code font, without parentheses, like flights or x.\nSometimes, to make it clear which package an object comes from, we’ll use the package name followed by two colons, like dplyr::mutate() or nycflights13::flights. This is also valid R code.\nTo improves readability, variable names and function names are named using snake case.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "intro.html#colophon",
    "href": "intro.html#colophon",
    "title": "1  Introduction",
    "section": "1.3 Colophon",
    "text": "1.3 Colophon\nThe book is written by Quarto, an online version of it is available at https://qbgaoo.github.io/r4ms/. It will continue to evolve in between reprints of the physical book. The source of the book is available at https://qbgaoo.github.io/r4ms/.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "quat-data-stat-desc.html#dataset-used-below",
    "href": "quat-data-stat-desc.html#dataset-used-below",
    "title": "2  Statistical description of quantitative data",
    "section": "2.2 Dataset used below",
    "text": "2.2 Dataset used below\nIn this chapter, we use the Heart Failure Prediction Dataset refered as heart.csv in the context to demonstrate the issues. The file is downloaded and saved in the datasets folder of this project. You can import this file into R by read_csv() function. The first argument is the most important: the path to the file. You can think about the path as the address of the file.\n\nheart &lt;- read_csv(\"datasets/heart.csv\")\n#&gt; Rows: 918 Columns: 12\n#&gt; ── Column specification ─────────────────────────────────────────────────────\n#&gt; Delimiter: \",\"\n#&gt; chr (5): Sex, ChestPainType, RestingECG, ExerciseAngina, ST_Slope\n#&gt; dbl (7): Age, RestingBP, Cholesterol, FastingBS, MaxHR, Oldpeak, HeartDis...\n#&gt; \n#&gt; ℹ Use `spec()` to retrieve the full column specification for this data.\n#&gt; ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nThe code above will work if you have the heart.csv file in a datasets folder in your project. Here is a show of some data in the file.\n\nheart |&gt; \n  select(1:6)\n#&gt; # A tibble: 918 × 6\n#&gt;     Age Sex   ChestPainType RestingBP Cholesterol FastingBS\n#&gt;   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;             &lt;dbl&gt;       &lt;dbl&gt;     &lt;dbl&gt;\n#&gt; 1    40 M     ATA                 140         289         0\n#&gt; 2    49 F     NAP                 160         180         0\n#&gt; 3    37 M     ATA                 130         283         0\n#&gt; 4    48 F     ASY                 138         214         0\n#&gt; 5    54 M     NAP                 150         195         0\n#&gt; 6    39 M     NAP                 120         339         0\n#&gt; # ℹ 912 more rows\n\nOnce you read data in, the first step usually involves transforming it in some way to make it easier to work with in the rest of your analysis. Firstly, we use janitor::clean_names() to turn all column names of heart into snake case. Then a variable named max_hr (i.e. maximum heart rate) is selected for subsequent analysis.\n\nmax_hr &lt;- heart |&gt;\n  janitor::clean_names() |&gt; \n  select(max_hr, heart_disease) |&gt; \n  filter(heart_disease == 1) |&gt; \n  select(max_hr)\n\nnrow(max_hr)\n#&gt; [1] 508\n\nTotally there are 508 observations. The missing values are checked below：\n\nmax_hr |&gt; \n  anyNA()\n#&gt; [1] FALSE\n\nThe output FALSE indicates no missing values is present.",
    "crumbs": [
      "Basic statistical methods",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Statistical description of quantitative data</span>"
    ]
  },
  {
    "objectID": "quat-data-stat-desc.html#frequency-table-and-histogram",
    "href": "quat-data-stat-desc.html#frequency-table-and-histogram",
    "title": "2  Statistical description of quantitative data",
    "section": "2.3 Frequency table and histogram",
    "text": "2.3 Frequency table and histogram",
    "crumbs": [
      "Basic statistical methods",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Statistical description of quantitative data</span>"
    ]
  },
  {
    "objectID": "quat-data-stat-desc.html#frequency-table",
    "href": "quat-data-stat-desc.html#frequency-table",
    "title": "2  Statistical description of quantitative data",
    "section": "2.4 Frequency table",
    "text": "2.4 Frequency table\nA frequency table mentioned here is a statistical tool that organizes data into intervals and lists the number of frequency in each interval. It helps summarize large dataset by showing how often each value or range of values occurs, making it easier to identify trends and the overall distribution of the data. This table is often used in conjunction with visual tools like histogram to enhance data interpretation.\nHere is the steps for creating a frequency table for continuous variables.\n\nComputing the minimum and maximum of the variable.\n\n\nmin_max_hr &lt;- max_hr |&gt; \n  min()\n\nmax_max_hr &lt;- max_hr |&gt; \n  max()\n\n\nDetermining the number of intervals. The number of intervals is typically between 10 and 15; here, we adopt 12. The seq() function is used to obtain upper and lower limits of the intervals.\n\n\nbreaks &lt;- seq(min_max_hr, max_max_hr, length.out = 13)\nbreaks\n#&gt;  [1]  60.00  71.25  82.50  93.75 105.00 116.25 127.50 138.75 150.00 161.25\n#&gt; [11] 172.50 183.75 195.00\n\n\nUsing the cut() function to dive each data into their respective intervals.\n\n\ncut(pull(max_hr), breaks = breaks, include.lowest = T, right = F) |&gt; \n  head(40)\n#&gt;  [1] [150,161)   [105,116)   [128,139)   [93.8,105)  [139,150)   [161,172)  \n#&gt;  [7] [116,128)   [150,161)   [150,161)   [128,139)   [116,128)   [128,139)  \n#&gt; [13] [82.5,93.8) [93.8,105)  [116,128)   [161,172)   [116,128)   [93.8,105) \n#&gt; [19] [150,161)   [139,150)   [93.8,105)  [116,128)   [71.2,82.5) [139,150)  \n#&gt; [25] [150,161)   [128,139)   [128,139)   [161,172)   [105,116)   [116,128)  \n#&gt; [31] [93.8,105)  [105,116)   [150,161)   [82.5,93.8) [139,150)   [105,116)  \n#&gt; [37] [128,139)   [150,161)   [116,128)   [82.5,93.8)\n#&gt; 12 Levels: [60,71.2) [71.2,82.5) [82.5,93.8) [93.8,105) ... [184,195]\n\n\n8 intervals per line, with the total number of elements being a multiple of 8. Use empty characters to pad if necessary.\n\n\n\nGenerating frequency table.\n\n\ncut(pull(max_hr), breaks = breaks, include.lowest = T, right = F) |&gt;\n  table() |&gt; \n  kableExtra::kbl(align = \"c\") |&gt; \n  kableExtra::kable_classic(full_width = T)\n\n\n\n\n\nVar1\nFreq\n\n\n\n\n[60,71.2)\n5\n\n\n[71.2,82.5)\n9\n\n\n[82.5,93.8)\n20\n\n\n[93.8,105)\n43\n\n\n[105,116)\n81\n\n\n[116,128)\n108\n\n\n[128,139)\n68\n\n\n[139,150)\n71\n\n\n[150,161)\n63\n\n\n[161,172)\n25\n\n\n[172,184)\n14\n\n\n[184,195]\n1\n\n\n\n\n\n\n\n\n\n2.4.1 Frequency histogram\n\n# Setting font size parameters.\npar(cex = 0.8) \n\nhist(\n  x              = pull(max_hr), \n  breaks         = breaks, \n  freq           = T,\n  right          = F, \n  col            = \"skyblue\", \n  include.lowest = T,\n  main           = \" \",\n  xlab           = \"Maximum heart rate\",\n  ylab           = \"Frequency\",\n  labels         = T\n)\n\n\n\n\n\n\n\n\nHere is another method to plot the same histogram.\n\nggplot(max_hr, aes(x = max_hr)) +\n  geom_histogram(\n    fill = \"skyblue\", \n    stat = \"bin\",\n    color = \"black\",\n    linewidth = 0.4,\n    breaks = breaks,\n    closed = \"left\"\n  ) +\n  stat_bin(\n    geom = \"text\", \n    aes(label = after_stat(count)),\n    breaks = breaks, \n    closed = \"left\",\n    size = 3.2,\n    vjust = - 0.5\n  ) +\n  labs(x = \"Maximum heart rate\", y = \"Frequency\") +\n  theme(\n    panel.background = element_blank(),        \n    axis.line = element_line(color = \"black\") \n  )",
    "crumbs": [
      "Basic statistical methods",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Statistical description of quantitative data</span>"
    ]
  },
  {
    "objectID": "quat-data-stat-desc.html#frequency-histogram",
    "href": "quat-data-stat-desc.html#frequency-histogram",
    "title": "2  Statistical description of quantitative data",
    "section": "2.5 Frequency histogram",
    "text": "2.5 Frequency histogram\nA frequency histogram is a graphical representation of a frequency table. It displays the distribution of numerical variales by showing the frequency (count) of a value within specific intervals (bins) on the x-axis, with the y-axis representing the frequency. Each bar in the histogram corresponds to an interval, and the height of the bar indicates how many valuess fall within that range. This visual tool is useful for quickly assessing the shape, spread, and central tendency of the data distribution.",
    "crumbs": [
      "Basic statistical methods",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Statistical description of quantitative data</span>"
    ]
  },
  {
    "objectID": "quat-data-stat-desc.html#frequency-histogram-1",
    "href": "quat-data-stat-desc.html#frequency-histogram-1",
    "title": "2  Statistical description of quantitative data",
    "section": "2.5 Frequency histogram",
    "text": "2.5 Frequency histogram\nA frequency histogram is a graphical representation of a frequency table. It displays the distribution of numerical variales by showing the frequency (count) of a value within specific intervals (bins) on the x-axis, with the y-axis representing the frequency. Each bar in the histogram corresponds to an interval, and the height of the bar indicates how many valuess fall within that range. This visual tool is useful for quickly assessing the shape, spread, and central tendency of the data distribution.",
    "crumbs": [
      "Basic statistical methods",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Statistical description of quantitative data</span>"
    ]
  },
  {
    "objectID": "quat-data-stat-desc.html#prerequisite",
    "href": "quat-data-stat-desc.html#prerequisite",
    "title": "2  Statistical description of quantitative data",
    "section": "",
    "text": "Example\n\n\n\nSome researchers used a random sampling method to examine the maximum heart rate of 143 normal adult women. The measuring results are saved in a .csv file. Please use the data to create a frequency distribution table.",
    "crumbs": [
      "Basic statistical methods",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Statistical description of quantitative data</span>"
    ]
  },
  {
    "objectID": "quat-data-stat-desc.html#visualization",
    "href": "quat-data-stat-desc.html#visualization",
    "title": "2  Statistical description of quantitative data",
    "section": "2.2 Visualization",
    "text": "2.2 Visualization\n\n2.2.1 Frequency table\nA frequency table mentioned here is a statistical tool that organizes data into intervals and lists the number of frequency in each interval. It helps summarize large dataset by showing how often each value or range of values occurs, making it easier to identify trends and the overall distribution of the data. This table is often used in conjunction with visual tools like histogram to enhance data interpretation.\nHere is the steps for creating a frequency table for continuous variables.\n\nComputing the minimum and maximum of the variable.\n\n\nmin_max_hr &lt;- max_hr |&gt; \n  min()\n\nmax_max_hr &lt;- max_hr |&gt; \n  max()\n\n\nDetermining the number of intervals. The number of intervals is typically between 10 and 15; here, we adopt 12. The seq() function is used to obtain upper and lower limits of the intervals.\n\n\nbreaks &lt;- seq(min_max_hr, max_max_hr, length.out = 13)\nbreaks\n#&gt;  [1]  90.0  98.5 107.0 115.5 124.0 132.5 141.0 149.5 158.0 166.5 175.0 183.5\n#&gt; [13] 192.0\n\n\nUsing the cut() function to dive each data into their respective intervals.\n\n\ncut(pull(max_hr), breaks = breaks, include.lowest = T, right = F) |&gt; \n  head(40)\n#&gt;  [1] [166,175) [116,124) [141,150) [132,141) [150,158) [158,166) [141,150)\n#&gt;  [8] [158,166) [124,132) [150,158) [141,150) [141,150) [124,132) [124,132)\n#&gt; [15] [150,158) [132,141) [166,175) [175,184) [141,150) [124,132) [141,150)\n#&gt; [22] [107,116) [150,158) [141,150) [158,166) [141,150) [175,184) [107,116)\n#&gt; [29] [124,132) [132,141) [184,192] [132,141) [184,192] [175,184) [132,141)\n#&gt; [36] [116,124) [175,184) [175,184) [132,141) [90,98.5)\n#&gt; 12 Levels: [90,98.5) [98.5,107) [107,116) [116,124) [124,132) ... [184,192]\n\n\n8 intervals per line, with the total number of elements being a multiple of 8. Use empty characters to pad if necessary.\n\n\n\nGenerating the frequency table.\n\n\ncut(pull(max_hr), breaks = breaks, include.lowest = T, right = F) |&gt;\n  table() |&gt; \n  knitr::kable(col.names = c(\"interval\", \"freq\"), align = \"c\")\n\n\n\n\ninterval\nfreq\n\n\n\n\n[90,98.5)\n4\n\n\n[98.5,107)\n0\n\n\n[107,116)\n6\n\n\n[116,124)\n12\n\n\n[124,132)\n14\n\n\n[132,141)\n12\n\n\n[141,150)\n15\n\n\n[150,158)\n20\n\n\n[158,166)\n28\n\n\n[166,175)\n16\n\n\n[175,184)\n12\n\n\n[184,192]\n4\n\n\n\n\n\n\n\n2.2.2 Frequency histogram\nA frequency histogram is a graphical representation of a frequency table. It displays the distribution of numerical variales by showing the frequency (count) of a value within specific intervals (bins) on the x-axis, with the y-axis representing the frequency. Each bar in the histogram corresponds to an interval, and the height of the bar indicates how many valuess fall within that range. This visual tool is useful for quickly assessing the shape, spread, and central tendency of the data distribution.\n\nhist(\n  x              = pull(max_hr), \n  breaks         = breaks, \n  freq           = T,\n  right          = F, \n  col            = \"skyblue\", \n  include.lowest = T,\n  main           = \" \",\n  xlab           = \"Maximum heart rate\",\n  ylab           = \"Frequency\",\n  ylim           = c(0, 30),\n  labels         = T\n)\n\n\n\n\n\n\n\n\nAn alternative approach to plot the same histogram is also supplied below.\n\nmax_hr |&gt; \n  ggplot(aes(x = max_hr)) +\n  geom_histogram(\n    fill = \"skyblue\", \n    stat = \"bin\",\n    color = \"black\",\n    breaks = breaks,\n    closed = \"left\"\n  ) +\n  stat_bin(\n    geom = \"text\", \n    aes(label = after_stat(count)),\n    breaks = breaks, \n    closed = \"left\",\n    size = 4,\n    vjust = - 0.3\n  ) +\n  labs(x = \"Maximum heart rate\", y = \"Frequency\") +\n  theme(\n    axis.title.x = element_text(size = 12), \n    axis.title.y = element_text(size = 12), \n    axis.text.x = element_text(size = 11),  \n    axis.text.y = element_text(size = 11),\n    panel.background = element_blank(),        \n    axis.line = element_line(color = \"black\") \n  )",
    "crumbs": [
      "Basic statistical methods",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Statistical description of quantitative data</span>"
    ]
  },
  {
    "objectID": "anova.html",
    "href": "anova.html",
    "title": "6  Analysis of Variance",
    "section": "",
    "text": "6.1 Prerequisite\nlibrary(haven)\nlibrary(tidyverse)",
    "crumbs": [
      "Basic statistical methods",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Analysis of Variance</span>"
    ]
  },
  {
    "objectID": "anova.html#completely-randomized-design",
    "href": "anova.html#completely-randomized-design",
    "title": "6  Analysis of Variance",
    "section": "6.2 Completely randomized design",
    "text": "6.2 Completely randomized design\n\n\n\n\n\n\nExample\n\n\n\nTo evaluate the efficacy of xanomeline in subjects with mild to moderate Alzheimer’s disease, subjects were randomized equally to placebo, xanomeline low dose, or xanomeline high dose. Subjects applied 2 patches daily and were followed for a total of 26 weeks. Primary efficacy endpoints\n\n\n\n# haven::read_dta(\"datasets/例02-05.dta\") |&gt; \n#   write_csv(\"datasets/ex02-05.csv\")",
    "crumbs": [
      "Basic statistical methods",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Analysis of Variance</span>"
    ]
  },
  {
    "objectID": "anova.html#section",
    "href": "anova.html#section",
    "title": "6  Analysis of Variance",
    "section": "6.3 ",
    "text": "6.3",
    "crumbs": [
      "Basic statistical methods",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Analysis of Variance</span>"
    ]
  }
]